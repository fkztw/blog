<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Just for noting - setuptools</title><link href="https://blog.m157q.tw/" rel="alternate"></link><link href="https://blog.m157q.tw/feeds/tag.setuptools.atom.xml" rel="self"></link><id>https://blog.m157q.tw/</id><updated>2020-07-11T15:54:19+08:00</updated><subtitle></subtitle><entry><title>No more requirements-test.txt for Flit or Poetry while using Tox running tests</title><link href="https://blog.m157q.tw/posts/2020/07/11/no-more-requirements-test-txt-for-flit-or-poetry-while-using-tox-running-tests/" rel="alternate"></link><published>2020-07-11T15:54:19+08:00</published><updated>2020-07-11T15:54:19+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2020-07-11:/posts/2020/07/11/no-more-requirements-test-txt-for-flit-or-poetry-while-using-tox-running-tests/</id><summary type="html">&lt;p&gt;最近開始用 &lt;code&gt;pyproject.toml&lt;/code&gt; 取代 &lt;code&gt;setup.py&lt;/code&gt;, &lt;code&gt;requirements.txt&lt;/code&gt;, ...，紀錄一下遇到的問題。&lt;/p&gt;</summary><content type="html">&lt;h1&gt;前言&lt;/h1&gt;
&lt;p&gt;目前使用 &lt;code&gt;poetry&lt;/code&gt; 和 &lt;code&gt;flit&lt;/code&gt; 這兩套工具，皆可以讀取 &lt;code&gt;pyproject.toml&lt;/code&gt;。&lt;br&gt;
但 &lt;code&gt;flit&lt;/code&gt; 的開發較早，功能也比較陽春一些，如果是剛轉換的話，推薦直接使用 &lt;code&gt;poetry&lt;/code&gt;。&lt;br&gt;
兩者最大的差別主要在於 &lt;code&gt;poetry&lt;/code&gt; 有 lock dependencies 的機制，但 &lt;code&gt;flit&lt;/code&gt; 沒有。&lt;/p&gt;
&lt;p&gt;兩者都可以捨棄 requirements.txt files，與 tox 結合進行測試。&lt;/p&gt;
&lt;p&gt;而 &lt;code&gt;tox.ini&lt;/code&gt; 現在也可以寫在 &lt;code&gt;pyproject.toml&lt;/code&gt; 裡頭了，請參考：&lt;a href="https://tox.readthedocs.io/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini"&gt;Basic usage — tox 3.16.2.dev1 documentation&lt;/a&gt;，所以以下的 &lt;code&gt;tox&lt;/code&gt; 相關設定都是以這種方式寫在 &lt;code&gt;pyproject.toml&lt;/code&gt; 裡頭。&lt;/p&gt;
&lt;h1&gt;Poetry 解法&lt;/h1&gt;
&lt;h2&gt;Poetry 官方解法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://python-poetry.org/docs/faq/#is-tox-supported"&gt;FAQ | Documentation | Poetry - Python dependency management and packaging made easy.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[tox]&lt;/span&gt;
&lt;span class="na"&gt;isolated_build&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;envlist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;py27, py36&lt;/span&gt;

&lt;span class="k"&gt;[testenv]&lt;/span&gt;
&lt;span class="na"&gt;whitelist_externals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;poetry&lt;/span&gt;
&lt;span class="na"&gt;commands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&lt;/span&gt;
&lt;span class="s"&gt;    poetry install -v&lt;/span&gt;
&lt;span class="s"&gt;    poetry run pytest tests/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;將 &lt;code&gt;tox.ini&lt;/code&gt; 照著上面的方式修改即可。&lt;br&gt;
可以看到重點是在 &lt;code&gt;whitelist_externals = poetry&lt;/code&gt; 這行。&lt;br&gt;
會讓 tox 建立的獨立 virtualenv 可以使用外部的指令。&lt;br&gt;
所以內部的獨立 virtualenv 便有了 &lt;code&gt;poetry&lt;/code&gt; 可以用了。（當然前提是外部環境有裝 &lt;code&gt;poetry&lt;/code&gt;）  &lt;/p&gt;
&lt;p&gt;因為 &lt;code&gt;poetry install&lt;/code&gt; 預設會自行偵測現在使用的 virtualenv，所以會正確將套件安裝到每個由 tox 建立出來的獨立 virtualenv 中。（&lt;code&gt;-v&lt;/code&gt; 則是詳細顯示出安裝了哪些東西，方便確認是否真的有安裝需要的套件。）&lt;/p&gt;
&lt;p&gt;最後就能直接用 &lt;code&gt;poetry run&lt;/code&gt; 來跑測試了。&lt;/p&gt;
&lt;h2&gt;Poetry 另類解法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;先註明：還是比較推薦上述的官方方法，這個另類解法只是提供另外一種紀錄方式，下面會提到其缺點。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Poetry 有個 &lt;code&gt;export&lt;/code&gt; 指令，可以將 lock file 轉為其他格式，目前僅支援 &lt;code&gt;requirements.txt&lt;/code&gt; 的格式：&lt;a href="https://python-poetry.org/docs/cli/#export"&gt;Commands | Documentation | Poetry - Python dependency management and packaging made easy.&lt;/a&gt;&lt;br&gt;
這個方法的邏輯很簡單。以前的 &lt;code&gt;requirements-test.txt&lt;/code&gt; 是直接存在 repo 裡頭，但現在把它刪除掉，改成每次都透過 &lt;code&gt;poetry export --dev -f requirements.txt &amp;gt; requirements-test.txt&lt;/code&gt; 產生 &lt;code&gt;requirements-test.txt&lt;/code&gt;。 完全不用修改 &lt;code&gt;tox&lt;/code&gt; 相關的設定，用完後再將 &lt;code&gt;requirements-test.txt&lt;/code&gt; 刪除即可。&lt;br&gt;
但這個方法有個缺點，可能會安裝過多東西。因為 &lt;code&gt;poetry export&lt;/code&gt; 的 &lt;code&gt;--dev&lt;/code&gt; 是將開發相關的套件相依全部納入，並沒有生成只和測試相關套件的 &lt;code&gt;requirements-test.txt&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;Flit 解法&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;這個其實才是我這次想解決的問題，因為某個 side project 在我一開始知道 &lt;code&gt;pyproject.toml&lt;/code&gt; 後，而 &lt;code&gt;poetry&lt;/code&gt; 還沒出來之前，就採用了 &lt;code&gt;flit&lt;/code&gt; 進行套件管理。但 flit 的官方網站又沒有提到遇到跟 tox 的整合該如何處理，所以我參考了 &lt;code&gt;poetry&lt;/code&gt; 的解法。但因為 &lt;code&gt;flit&lt;/code&gt; 和 &lt;code&gt;poetry&lt;/code&gt; 的運作機制不太一樣，所以需要做些調整，紀錄在下面。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;參考 Poetry 官方解法，在 &lt;code&gt;tox.ini&lt;/code&gt; 裡頭使用 &lt;code&gt;whitelist_externals&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;但 &lt;code&gt;flit install&lt;/code&gt; 不會自動偵測目前所使用的 virtualenv，所以安裝的時候預設會裝在 &lt;code&gt;flit&lt;/code&gt; 自帶的 lib 底下，必須安裝在 &lt;code&gt;tox&lt;/code&gt; 使用的 virtualenv python lib 底下才有用。&lt;/li&gt;
&lt;li&gt;還好 &lt;code&gt;flit install&lt;/code&gt; 有 &lt;code&gt;--python&lt;/code&gt; 這個選項，只要把 &lt;code&gt;tox&lt;/code&gt; 使用的 virtualenv python 路徑給他就行了&lt;/li&gt;
&lt;li&gt;然後發現 tox.ini 有內建變數 &lt;code&gt;{envpython}&lt;/code&gt; 可以直接拿到 virtualenv python path，就解決了。&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tox.readthedocs.io/en/latest/config.html#substitutions-for-virtualenv-related-sections"&gt;tox configuration specification — tox 3.16.2.dev1 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下是在 &lt;code&gt;pyproject.toml&lt;/code&gt; 裡頭修改後的結果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Tox&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tool.tox&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;legacy_tox_ini&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="ss"&gt;[tox]&lt;/span&gt;
&lt;span class="ss"&gt;isolated_build = True&lt;/span&gt;
&lt;span class="ss"&gt;skipsdist = true&lt;/span&gt;
&lt;span class="ss"&gt;envlist = py34,py35,py36,py37,py38&lt;/span&gt;

&lt;span class="ss"&gt;[testenv]&lt;/span&gt;
&lt;span class="ss"&gt;whitelist_externals = flit&lt;/span&gt;
&lt;span class="ss"&gt;commands =&lt;/span&gt;
&lt;span class="ss"&gt;    flit install --extras test --python {envpython}&lt;/span&gt;
&lt;span class="ss"&gt;    pytest -vv --flake8 --cov hor2vec/ --cov-report html --cov-report term --junitxml=test-reports/junit.xml --flake8&lt;/span&gt;
&lt;span class="ss"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;修改前後的對比&lt;/h1&gt;
&lt;p&gt;&lt;img alt="Run tox with flit" src="/files/no-more-requirements-test-txt-for-flit-or-poetry-while-using-tox-running-tests/run-tox-with-flit.jpg"&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Poetry"></category><category term="Flit"></category><category term="Tox"></category><category term="setuptools"></category></entry><entry><title>setuptools 36.2.0 upgrading/downgrading uninstall rollback error with Python 3.6.2 on Travis CI</title><link href="https://blog.m157q.tw/posts/2017/08/27/setuptools-36-2-0-upgrading-downgrading-uninstall-rollback-error-with-python-3-6-2-on-travis-ci/" rel="alternate"></link><published>2017-08-27T18:12:22+08:00</published><updated>2017-08-27T18:12:22+08:00</updated><author><name>m157q</name></author><id>tag:blog.m157q.tw,2017-08-27:/posts/2017/08/27/setuptools-36-2-0-upgrading-downgrading-uninstall-rollback-error-with-python-3-6-2-on-travis-ci/</id><summary type="html">&lt;p&gt;Note for situation and solution and more&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;TL;DR: Just &lt;code&gt;pip install -U setuptools&lt;/code&gt; before the package which depends on &lt;code&gt;setuptools&lt;/code&gt; upgrade it.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;A build on Travis CI of one of my side projects got error &lt;code&gt;AttributeError: 'Distribution' object has no attribute 'install_requires'&lt;/code&gt; while upgrading setuptools from 36.2.0 to 36.7.0 with Python 3.6.2 build job. This build also has Python 3.4 and Python 3.5 build jobs which have no erorr because they didn't need to upgrade &lt;code&gt;setuptools&lt;/code&gt;.  &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;What's the problem&lt;/h2&gt;
&lt;p&gt;Travis CI image with &lt;code&gt;os: linux&lt;/code&gt; and &lt;code&gt;python: 3.6&lt;/code&gt; labels default installed &lt;code&gt;Python 3.6.2&lt;/code&gt;, &lt;code&gt;pip 9.0.1&lt;/code&gt; and &lt;code&gt;setuptools 36.2.0&lt;/code&gt; in this time. The problem occured while &lt;code&gt;pip install -U pytest&lt;/code&gt; was running because the default &lt;code&gt;--upgrade-strategy&lt;/code&gt; of &lt;code&gt;-U / --upgrade&lt;/code&gt; option of &lt;code&gt;pip&lt;/code&gt; is &lt;code&gt;"eager"&lt;/code&gt; which will upgrade all dependent packages to newest version.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See part of &lt;code&gt;pip install -h&lt;/code&gt; for detail:&lt;br&gt;
&lt;code&gt;-U, --upgrade               Upgrade all specified packages to the newest available version.  
                              The handling of dependencies depends on the upgrade-strategy  
                              used.  
  --upgrade-strategy &amp;lt;upgrade_strategy&amp;gt;  
                              Determines how dependency upgrading should be handled. "eager"  
                              - dependencies are upgraded regardless of whether the currently  
                              installed version satisfies the requirements of the upgraded  
                              package(s). "only-if-needed" -  are upgraded only when they do  
                              not satisfy the requirements of the upgraded package(s).&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This made &lt;code&gt;pip install -U pytest&lt;/code&gt; upgrade &lt;code&gt;setuptools&lt;/code&gt; from 36.2.0 to 36.7.0 while installing &lt;code&gt;pytest-3.2.1&lt;/code&gt; and got the error below:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Found existing installation: setuptools 36.2.0  &lt;/span&gt;
&lt;span class="err"&gt;    Uninstalling setuptools-36.2.0:  &lt;/span&gt;
&lt;span class="err"&gt;      Successfully uninstalled setuptools-36.2.0  &lt;/span&gt;
&lt;span class="err"&gt;  Rolling back uninstall of setuptools  &lt;/span&gt;
&lt;span class="c"&gt;Exception:  &lt;/span&gt;
&lt;span class="err"&gt;Traceback (most recent call last):  &lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/basecommand.py&amp;quot;, line 215, in main  &lt;/span&gt;
&lt;span class="err"&gt;    status = self.run(options, args)  &lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/commands/install.py&amp;quot;, line 342, in run  &lt;/span&gt;
&lt;span class="err"&gt;    prefix=options.prefix_path,  &lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/req/req_set.py&amp;quot;, line 784, in install  &lt;/span&gt;
&lt;span class="err"&gt;    **kwargs  &lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/req/req_install.py&amp;quot;, line 851, in install  &lt;/span&gt;
&lt;span class="err"&gt;    self.move_wheel_files(self.source_dir, root=root, prefix=prefix)  &lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/req/req_install.py&amp;quot;, line 1064, in move_wheel_files  &lt;/span&gt;
&lt;span class="err"&gt;    isolated=self.isolated,  &lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/wheel.py&amp;quot;, line 247, in move_wheel_files  &lt;/span&gt;
&lt;span class="err"&gt;    prefix=prefix,  &lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/pip/locations.py&amp;quot;, line 140, in distutils_scheme  &lt;/span&gt;
&lt;span class="err"&gt;    d = Distribution(dist_args)  &lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/setuptools/dist.py&amp;quot;, line 365, in __init__  &lt;/span&gt;
&lt;span class="err"&gt;    self._finalize_requires()  &lt;/span&gt;
&lt;span class="err"&gt;  File &amp;quot;/home/travis/virtualenv/python3.6.2/lib/python3.6/site-packages/setuptools/dist.py&amp;quot;, line 372, in _finalize_requires  &lt;/span&gt;
&lt;span class="err"&gt;    if not self.install_requires:  &lt;/span&gt;
&lt;span class="c"&gt;AttributeError: &amp;#39;Distribution&amp;#39; object has no attribute &amp;#39;install_requires&amp;#39;  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h2&gt;How to fix it&lt;/h2&gt;
&lt;p&gt;Although there are many comments on &lt;a href="https://github.com/pypa/setuptools/issues/1086"&gt;pypa/setuptools #1086&lt;/a&gt; and &lt;a href="https://github.com/pypa/setuptools/issues/1101"&gt;pypa/setuptools #1101&lt;/a&gt;, I didn't know the exact reason after I read them. But after a little digging on the GitHub, I finally got some clues.  &lt;/p&gt;
&lt;p&gt;This problem had already been fixed in &lt;a href="https://github.com/pypa/setuptools/pull/1089"&gt;pypa/setuptools #1089&lt;/a&gt;, but why I still got this problem? Because this fix is &lt;a href="https://github.com/pypa/setuptools/blob/ac7a33c84d74afd3b7453bd880943be9cb4c5787/setuptools/dist.py"&gt;in setuptools-36.2.1&lt;/a&gt; not in &lt;a href="https://github.com/pypa/setuptools/blob/1eec02038d28506a42bc45d14ef2d54b136cc8bc/setuptools/dist.py"&gt;setuptools-36.2.0&lt;/a&gt;, if you use &lt;code&gt;setuptools-36.2.0&lt;/code&gt; you will still encounter this problem.  &lt;/p&gt;
&lt;p&gt;Here's &lt;a href="https://github.com/labgrid-project/labgrid/pull/119/files"&gt;a workarond for this problem&lt;/a&gt; which is same as the TL;DR, just &lt;code&gt;pip install --upgrade setuptools&lt;/code&gt; to upgrade it.  &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Further Discussion&lt;/h2&gt;
&lt;p&gt;But why? why &lt;code&gt;pip install --upgrade setuptools&lt;/code&gt; works? why &lt;code&gt;pip install -U pytest&lt;/code&gt; doesn't? Aren't these two methods just remove &lt;code&gt;setuptools-36.2.0&lt;/code&gt; and install a newer &lt;code&gt;setuptools&lt;/code&gt;? According to the result, it's not.  &lt;/p&gt;
&lt;p&gt;I guess I might have to spend some time on figuring the workflow of &lt;code&gt;pip&lt;/code&gt;?  &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/45307110/pip-is-rolling-back-uninstall-of-setuptools"&gt;https://stackoverflow.com/questions/45307110/pip-is-rolling-back-uninstall-of-setuptools&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pypa/setuptools/issues/1086"&gt;https://github.com/pypa/setuptools/issues/1086&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pypa/setuptools/issues/1101"&gt;https://github.com/pypa/setuptools/issues/1101&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pypa/setuptools/pull/1089"&gt;https://github.com/pypa/setuptools/pull/1089&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;</content><category term="Travis CI"></category><category term="Python"></category><category term="setuptools"></category></entry></feed>